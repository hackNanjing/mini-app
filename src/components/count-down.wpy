<style lang="less">
  .counter {
    text-align: center;
    font-size: 54px;
    width: 270px;
    margin-bottom: 36px;
    z-index:9999;
  }
  .font-white {
    color: #fff;
  }
  .font-black {
    color: #333;
  }
  .count {
    font-size: 16px;
    font-weight: bold;
  }
  .action-button {
    width: 270px;
    height: 55px;
    color: #fff;
    background-color: #28d526;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
  }
  button {
    border: none;
    background-color: translate!important;
  }
  .mode-container {
    width: 100%;
    height: 100vh;
    z-index: 888;
    position: relative;
    background-color: rgba(0, 0, 0, 0.2);
    overflow: hidden;
    
    .counter {
      float: left;
      margin-top: 50%;
      margin-left: 50%;
      transform: translate(-50%, -50%);
    }

     .close-button {
      width: 48rpx;
      float: right;
      height: 48rpx;
      margin-top: 36rpx;
      margin-right: 36rpx;
    }
  }
</style>

<template>
  <view class="counter font-black" wx:if="{{!isStarted}}">
    <picker mode="time" start="0:10" end="04:00" @change.stop="bindTimeChange">
      <text>{{excess}}</text>
    </picker>
  </view>
  <view class="mode-container" wx:if="{{isStarted}}" style="height: {{ clientHeight * 2}}rpx">
  <view @tap.stop="close"><image src="http://i1.piimg.com/588926/dfdeb88f1ac462a5.png" mode="scaleToFill" class="close-button" ></image></view>
    <view class="counter font-white">
      <text>{{excess}}</text>
    </view>
  </view>
  
  <form @submit="start" report-submit="true" wx:if="{{!isStarted}}">
    <button formType="submit" class="action-button">Start</button>
  </form>
</template>

<script>
  import wepy from 'wepy'
  import { BASE_URL } from '../constants'
  import { generateMinutes } from '../utils';
  
  const MOCK_ID = 'the formId is a mock one';

const DEFAULT_TIME = {
    hour: 0,
    minute: 30,
    second: 0
  }

  export default class Counter extends wepy.component {
    data = {
      time: JSON.parse(JSON.stringify(DEFAULT_TIME)),
      timeoutID: null,
      isStarted: false,
      excess: '00 : 00 : 00',
      clientHeight: 0,
      user: null
    }


    methods = {
      async start(event) {
        console.log('detail:', event.detail);
        let id = event.detail.formId;
        if (id !== MOCK_ID) {
          console.log('something!')
          await wepy.request({
            url: `${BASE_URL}/v1/users/form-id`,
            method: 'POST',
            data: {id},
            header: {
              auth: this.user.token
            }
          })
        }
        wepy.setStorage({ key: 'startAt', data: new Date().getTime() });
        wepy.setStorage({ key: 'total_minute', data: generateMinutes(this.time) });
        this.isStarted = true;
        this.countDown();
      },
      bindTimeChange(event) {
        let range = event.detail.value.split(':');
        this.time = {
          hour: range[0],
          minute: range[1],
          second: 0
        }
      },
      async close() {
        this.isStarted = false
        clearTimeout(this.timeoutID)
        const startAt = wx.getStorageSync('startAt')
        const total_minute = wx.getStorageSync('total_minute')
        let success_minute = total_minute - generateMinutes(this.time)
        const postData = {
          startAt,
          total_minute,
          success_minute
        };
        const { data: profile } = await wepy.request({
          url: `${BASE_URL}/v1/users/end`,
          method: 'POST',
          data: postData,
          header: {
            auth: this.user.token
          }
        })

        if (profile.now && profile.before_rank) wepy.navigateTo({url: `/pages/status?now=${profile.now}&before=${profile.before_rank}&score=${success_minute}`})
        this.time = JSON.parse(JSON.stringify(DEFAULT_TIME))
        const currentHour = this.time.hour < 10 ? `0${this.time.hour}` : this.time.hour
        const currentMinute = this.time.minute < 10 ? `0${this.time.minute}` : this.time.minute
        const currentSecond = this.time.second < 10 ? `0${this.time.second}` : this.time.second

        this.excess = `${currentHour}:${currentMinute}:${currentSecond}`
        this.$apply()
      }
    }

    async onLoad() {
      let {screenHeight} = wx.getSystemInfoSync();
      this.clientHeight = screenHeight;
      console.log('screenHeight', screenHeight);
      this.user = await this.$wxapp.getUserInfo();
    }

    countDown() {
      let { time, excess } = this.data
      if (typeof time === 'undefined') return

      let hour = parseInt(time.hour)
      let minute = parseInt(time.minute)
      let second = parseInt(time.second)

      if (second > 0) {
        second--
      } else if (minute > 0) {
        minute--
        second = 59
      } else if (hour > 0) {
        hour--
        minute = 59
      }

      const currentHour = hour < 10 ? `0${hour}` : hour
      const currentMinute = minute < 10 ? `0${minute}` : minute
      const currentSecond = second < 10 ? `0${second}` : second

      excess = `${currentHour}:${currentMinute}:${currentSecond}`

      this.time = {
        hour,
        minute,
        second
      }
      this.excess = excess

      this.$apply()

      this.timeoutID = setTimeout(() => {
        this.countDown()
      }, 1000)
    }
  }
</script>
