<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { BASE_URL } from './constants'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/recommend',
      'pages/personal'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
       list: [{
         pagePath: 'pages/index',
         text: 'Home'
       }, {
         pagePath: 'pages/recommend',
         text: 'Recommend',
       },{
         pagePath: 'pages/personal',
         text: 'Personal',
       }]
     },
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  async getUserInfo() {
    const app = this.$app
    if (app.globalData.userInfo) {
      return app.globalData.userInfo
    }
    try {
      const { code } = await wepy.login()
      const { data } = await wepy.request({
        url: `${BASE_URL}/usertas/openid?code=${code}`
      })

      const { userInfo } = await wepy.getUserInfo()
      userInfo.openid = data.openid
      app.globalData.userInfo = userInfo

      return userInfo
    } catch (e) {
      console.log(e)
    }
  }
}
</script>
